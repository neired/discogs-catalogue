{"version":3,"sources":["services/DiscogsFetches.js","components/List/List.js","components/Breadcrumb/DetailBreadcrumb.js","components/Error/Error.js","components/Detail/Detail.js","components/Filter/Filter.js","components/Collection/Collection.js","App.js","serviceWorker.js","index.js"],"names":["token","options","method","headers","optionsPost","fetchData","query","search","a","page","pageSize","ENDPOINT","fetch","res","json","console","log","fetchCollection","postRelease","id","List","props","data","addToCollection","Title","Typography","Meta","Card","placeholderImg","orientation","level","type","gutter","map","item","index","xs","sm","md","lg","key","to","className","hoverable","bordered","cover","country","width","alt","src","thumb","fallback","gap","size","icon","UserOutlined","title","description","year","shape","PlusOutlined","onClick","DetailBreadcrumb","current","Item","href","Paragraph","Detail","state","loading","error","routerProps","this","detailID","parseInt","match","params","detailType","fetchDetail","url","then","catch","setState","Text","name","images","resource_url","namevariations","join","ellipsis","rows","expandable","symbol","profile","members","member","thumbnail_url","artistsArr","artists","artist","push","styles","genres","notes","tracklist","track","position","direction","split","duration","Error","spinning","React","Component","Filter","searchByEnter","getQuery","getSearch","fetchQueryData","searchModes","isRelease","isArtist","forhtml","placeholder","onKeyPress","onChange","value","Group","defaultValue","mode","label","disabled","Collection","pagination","changeCollectionPage","i","basic_information","hideOnSinglePage","showSizeChanger","defaultCurrent","total","items","App","ref","createRef","isCollectionLoading","releases","collection","artistsPag","releasesPag","collectionPag","searchBy","bind","changeArtistPage","changeReleasePage","event","currentTarget","searchArr","target","requests","Promise","resolve","all","responses","results","newPagination","Header","Layout","Footer","Content","exact","path","render","HeartOutlined","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0e123d72.chunk.js","sourcesContent":["const token = \"WQcFMnNpoKKKPWCLQbUQKCcXGSNYUkGMqaWkfzmd\";\n\nexport const options = {\n  method: 'GET',\n  headers:{\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Authorization': `Discogs token=${token}`\n  }\n};\nconst optionsPost = {\n  method: 'POST',\n  headers:{\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Authorization': `Discogs token=${token}`\n  }\n};\n\nexport const fetchData = async (query, search, page = 1, pageSize = 12) => {\n  const ENDPOINT = `https://api.discogs.com/database/search?type=${search}&q=${query}&per_page=${pageSize}&page=${page}`;\n  try {\n    const res = await fetch(ENDPOINT, options);\n    return res.json();\n  } catch (error) {\n    return console.log('Looks like there was a problem!', error);\n  }\n}\n\nexport const fetchCollection = async (page = 1, pageSize = 12) => {\n  const ENDPOINT = `https://api.discogs.com/users/neired/collection/folders/0/releases?per_page=${pageSize}&page=${page}`;\n  try {\n    const res = await fetch(ENDPOINT, options);\n    return res.json();\n  } catch (error) {\n    return console.log(`Looks like we couldn't retrieve your collection!`, error);\n  }\n}\n\nexport const postRelease = async (id) => {\n  const ENDPOINT = `https://api.discogs.com/users/neired/collection/folders/1/releases/${id}`;\n  try {\n    const res = await fetch(ENDPOINT, optionsPost);\n    return res.json();\n  } catch (error) {\n    return console.log(`We couldn't add that item to your collection!`, error);\n  }\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, Card, Button, Typography, Divider, Avatar } from 'antd';\nimport './List.less';\nimport { UserOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst List = props => {\n  const { data, addToCollection } = props;\n  const { Title } = Typography;\n  const { Meta } = Card;\n  const placeholderImg = `https://generative-placeholders.glitch.me/image?width=150&height=150&style=tiles&colors=40`;\n    return (\n      <>\n        <Divider orientation=\"left\"><Title level={2}>{data[0].type === 'release' ? 'Albums' : 'Artists'}</Title></Divider>\n        <Row gutter={[0, 24]}>\n          {data.map((item, index) => { \n            return (\n              <Col xs={12} sm={6} md={4} lg={3}  key={item.id}>\n                <Link to={`/${item.type}/${item.id}`} className=\"\">\n                  <Card hoverable bordered={false} cover={item.country ? \n                    <Image width={100} alt=\"Album cover\" src={item.thumb} fallback={`${placeholderImg}&img=${index}`}/> \n                    : <Avatar className=\"list-avatar\" gap={0} size={100} src={item.thumb || `${placeholderImg}&img=${index}`} icon={<UserOutlined/>}></Avatar>}>\n                    <Meta title={item.title} description={item.country ? `${item.country} - ${item.year}` : ''}></Meta>\n                  </Card>\n                </Link>\n                {data[0].type === 'release' && <Button size=\"small\" className=\"add-btn\" type=\"primary\" shape=\"circle\" icon={<PlusOutlined/>} onClick={() => addToCollection(item.id)}></Button>}\n              </Col>\n            )\n          })}\n        </Row>\n      </>\n    )\n}\n\nexport default List;","import React from 'react';\nimport { Breadcrumb } from 'antd';\nimport './DetailBreadcrum.less';\n\nconst DetailBreadcrumb = props => {\n  const { current } = props;\n    return (\n        <Breadcrumb className=\"breadcrumb\">\n        <Breadcrumb.Item>\n          <a href=\"/\">Home</a>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>{current}</Breadcrumb.Item>\n      </Breadcrumb>\n    )\n}\n\nexport default DetailBreadcrumb;","import React from 'react';\nimport { Card, Image, Typography } from 'antd';\n\nconst DetailBreadcrumb = props => {\n  const { Title, Paragraph } = Typography;\n    return (\n      <Card className=\"detail-card\">\n        <div className=\"detail-header\">\n          <Image className=\"detail-img\" width={150} src=\"https://generative-placeholders.glitch.me/image?width=150&height=150&style=tiles&colors=40\"></Image>\n          <div className=\"detail-header-text\">\n            <Title level={2}>Oops... Something went wrong!</Title>\n            <Paragraph>Looks like the artist or album you are looking for doesn't exist yet...</Paragraph>\n            <Paragraph>Have you ever considered starting a band with that name?</Paragraph>\n          </div>\n        </div>\n      </Card>\n    )\n}\n\nexport default DetailBreadcrumb;","import React from 'react';\nimport {options} from '../../services/DiscogsFetches';\nimport { Card, Image, Typography, Spin, Space, Avatar, Row, Col } from 'antd';\nimport './Detail.less';\nimport DetailBreadcrumb from '../Breadcrumb/DetailBreadcrumb';\nimport Error from '../Error/Error';\n\nclass Detail extends React.Component {\n  constructor(props) {\n    super(props); \n    this.state = {\n      item: '',\n      loading: true,\n      error: false\n    }\n  };\n\n  componentDidMount() {\n    const {routerProps} = this.props;\n    const detailID = parseInt(routerProps.match.params.detailID);\n    const detailType = routerProps.match.params.detailType || 'release';\n    this.fetchDetail(detailType, detailID);\n  }\n\n  fetchDetail(type, id) {\n    const url = `https://api.discogs.com/${type}s/${id}`;\n    fetch(url, options)\n      .then(res => res.json())\n      .catch(error => {console.log('Oops!', error); this.setState({ error: true })})\n      .then(data => {\n        this.setState({ item: data, loading: false })\n      })\n  }\n  \n  render() {\n    const { item, loading, error } = this.state;\n    const { Title, Text, Paragraph } = Typography;\n    const placeholderImg = `https://generative-placeholders.glitch.me/image?width=150&height=150&style=tiles&colors=40`;\n    \n    if (item && item.name) {\n      return (\n        <div className=\"detail-section\">\n          <DetailBreadcrumb current={item.name}></DetailBreadcrumb>\n          <Card className=\"detail-card\">\n            <div className=\"detail-header\">\n              <Image className=\"detail-img\" size={150} width={150} src={item.images ? item.images[0].resource_url : placeholderImg}></Image>\n              <div className=\"detail-header-text\">\n                <Title level={2}>{item.name}</Title>\n                {item.namevariations && <Text><span className=\"default-text\">Also known as:</span> {item.namevariations.join(', ')}</Text>}\n              </div>\n            </div>\n            <Paragraph className=\"detail-description\" ellipsis={{ rows: 3, expandable: true, symbol: 'more' }}>{item.profile}</Paragraph>\n            {item.members &&\n              <Row>\n                {item.members && item.members.map((member) => { return (\n                  <Col xs={24} sm={12} md={6} lg={5} className=\"detail-members\" key={member.id}>\n                    <Space size=\"middle\">\n                      <Avatar size={50} src={member.thumbnail_url || placeholderImg}></Avatar>\n                      <Text>{member.name}</Text>\n                    </Space>\n                  </Col>\n                )})}\n              </Row>}\n          </Card>\n        </div>\n      )\n    } else if (item && item.title) {\n      const artistsArr = [];\n      item.artists && item.artists.map((artist) => artistsArr.push(artist.name));\n      return (\n        <div className=\"detail-section\">\n          <DetailBreadcrumb current={item.title}></DetailBreadcrumb>\n          <Card className=\"detail-card\">\n            <div className=\"detail-header\">\n              <Image className=\"detail-img\" size={150} width={150} src={item.images ? item.images[0].resource_url : placeholderImg}></Image>\n              <div className=\"detail-header-text\">\n                <Title level={2}>{item.title} <span className=\"default-text\">by</span> {artistsArr.join(', ')}</Title>\n                <Paragraph><span className=\"default-text\">Year:</span> {item.year}</Paragraph>\n                {item.styles && <Paragraph><span className=\"default-text\">Styles:</span> {item.styles.join(', ')}</Paragraph>}\n                {item.genres && <Paragraph><span className=\"default-text\">Genres:</span> {item.genres.join(', ')}</Paragraph>}\n              </div>\n            </div>\n            <Paragraph className=\"detail-description\" ellipsis={{ rows: 3, expandable: true, symbol: 'more' }}>{item.notes}</Paragraph>\n              {item.tracklist &&\n              <ol className=\"detail-list\"><span className=\"default-text\">Tracklist:</span>\n                {item.tracklist && item.tracklist.map((track) => { return (\n                  <li className=\"detail-list-item\" key={track.position}>\n                    <Space direction=\"horizontal\" split=\"-\">\n                      <Text>{track.title}</Text>\n                      <Text>{track.duration && <span>{track.duration}</span>}</Text>\n                    </Space>\n                  </li>\n                )})}\n              </ol>}\n          </Card>\n        </div>\n      )\n    } else if (error) {\n      return (\n        <div className=\"detail-section\">\n          <DetailBreadcrumb current=\"Error\"></DetailBreadcrumb>\n          <Error></Error>\n        </div>\n      )\n    }\n    return (\n      <Spin className=\"detail-spin\" spinning={loading} size=\"large\"></Spin>\n    )\n  }\n}\n\nexport default Detail;","import React from 'react';\nimport './Filter.less';\nimport { Col, Input, Radio, Button, Typography } from 'antd';\n\nconst Filter = props => {\n  const {searchByEnter, getQuery, query, getSearch, fetchQueryData, searchModes, isRelease, isArtist} = props;\n  const { Text } = Typography;\n    return (\n      <div className=\"filter-section\">\n        {isArtist && isRelease ? '' : <Text className=\"filter-text\">Welcome to Discogs Catalogue, the largest online music database in the world.</Text>}\n        <label forhtml=\"name\">\n          <Input className=\"filter-input\" size=\"large\" placeholder=\"Search by artist or album\" onKeyPress={searchByEnter} onChange={getQuery} value={query}></Input>\n        </label>\n        <Col className=\"filter-radio-group\">\n          <Radio.Group onChange={getSearch} defaultValue={searchModes[0].value}>\n            {searchModes.map((mode, index) => (\n              <Radio key={`filter_radio_${index}`} value={mode.value}>{mode.label}</Radio>\n            ))}\n          </Radio.Group>\n        </Col>\n        <Button type=\"primary\" disabled={!query} onClick={fetchQueryData} size=\"large\" className=\"search-btn\">Search</Button> \n      </div>\n    )\n}\n  \nexport default Filter;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Collection.less';\nimport { Col, Image, Card, Pagination, Typography, Divider, Spin } from 'antd';\n\nconst Collection = props => {\n  const { data, pagination, changeCollectionPage, loading } = props;\n  const { Title } = Typography;\n  const { Meta } = Card;\n    return (\n      <>\n        <Divider orientation=\"left\"><Title level={2}>My Collection</Title></Divider>\n        <div className=\"collection-row\">\n          <Spin spinning={loading} size=\"large\"></Spin>\n          {data.map((item, i) => { \n            return (\n              <Col key={i}>\n                <Link to={`/release/${item.id}`} className=\"\">\n                  <Card hoverable bordered={false} cover={<Image width={70} alt=\"Album cover\" src={item.basic_information.thumb} fallback=\"https://generative-placeholders.glitch.me/image?width=150&height=150&style=tiles&colors=40\"/>}>\n                    <Meta title={item.basic_information.title} description={item.basic_information.year}></Meta>\n                  </Card>\n                </Link>\n              </Col>\n            )\n          })}\n        </div>\n        <Pagination hideOnSinglePage size=\"small\" showSizeChanger={false} defaultCurrent={pagination.page} total={pagination.items} onChange={changeCollectionPage} pageSize={25}/>\n      </>\n    )\n}\n\nexport default Collection;","import React from 'react';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport {fetchData, fetchCollection, postRelease} from './services/DiscogsFetches';\nimport './App.less';\nimport { Layout, Typography, Pagination, Spin } from 'antd';\nimport { HeartOutlined } from '@ant-design/icons';\nimport List from './components/List/List';\nimport Detail from './components/Detail/Detail';\nimport Filter from './components/Filter/Filter';\nimport Collection from './components/Collection/Collection';\nimport Error from './components/Error/Error';\nclass App extends React.Component {\n  constructor(props) {\n    super(props); \n    this.ref = React.createRef();\n    this.state = {\n      loading: false,\n      isCollectionLoading: true,\n      error: false,\n      artists: [],\n      releases: [],\n      collection: [],\n      artistsPag : {},\n      releasesPag: {},\n      collectionPag: {},\n      query: '',\n      searchBy: ['artist', 'release'],\n      isArtist: false,\n      isRelease: false\n    }\n    this.searchModes = [\n      {\n        label: 'Both',\n        value: 'artist, release'\n      }, {\n        label: 'Artist',\n        value: 'artist,'\n      }, {\n        label: 'Album',\n        value: ',release'\n      }\n    ]\n    this.getQuery = this.getQuery.bind(this);\n    this.getSearch = this.getSearch.bind(this);\n    this.fetchQueryData = this.fetchQueryData.bind(this);\n    this.searchByEnter = this.searchByEnter.bind(this);\n    this.changeArtistPage = this.changeArtistPage.bind(this);\n    this.changeReleasePage = this.changeReleasePage.bind(this);\n    this.changeCollectionPage = this.changeCollectionPage.bind(this);\n    this.addToCollection = this.addToCollection.bind(this);\n  };\n  componentDidMount() {\n    fetchCollection()\n    .then(data => {\n      this.setState({\n        collection: data.releases,\n        collectionPag: data.pagination,\n        isCollectionLoading: false\n      });\n    })\n  }\n  getQuery(event) {\n    const query = event.currentTarget.value;\n    this.setState({\n      query : query\n    })\n  }\n  getSearch(event) {\n    const search = event.target.value;\n    const searchArr = search.split(',');\n    this.setState({\n      searchBy: searchArr\n    })\n  }\n  fetchQueryData() {\n    this.setState({\n      loading: true,\n      error:false,\n      releases: [],\n      releasesPag: {},\n      artists: [],\n      artistsPag: {},\n      isRelease: false,\n      isArtist: false,\n    })\n\n    const requests = this.state.searchBy.map(type => type ? fetchData(this.state.query, type) : Promise.resolve(null))\n    Promise.all(requests).then(responses => {\n      console.log(responses)\n      if(responses[0]) {\n        if (responses[0].pagination.items === 0) {\n          this.setState({ error: true, loading: false })\n        } else {\n          this.setState({\n            loading: false,\n            isArtist: true,\n            artists: responses[0].results,\n            artistsPag: responses[0].pagination,\n          })\n        }\n      }\n      if(responses[1]) {\n        if (responses[1].pagination.items === 0) {\n          this.setState({ error: true, loading: false })\n        } else {\n          this.setState({\n            loading: false,\n            isRelease: true,\n            releases: responses[1].results,\n            releasesPag: responses[1].pagination\n          });\n        }\n      }\n    })\n  }\n  searchByEnter(event) {\n    if (event.key === \"Enter\") {\n      this.fetchQueryData();\n    }\n  }\n  changeArtistPage(page, pageSize) {\n    this.setState({ loading: true });\n    fetchData(this.state.query, 'artist', page, pageSize)\n      .then(data => {\n        this.setState({\n          loading: false,\n          artists: data.results,\n          artistsPag: data.pagination,\n        });\n      })\n  }\n  changeReleasePage(page, pageSize) {\n    this.setState({ loading: true });\n    fetchData(this.state.query, 'release', page, pageSize)\n      .then(data => {\n        this.setState({\n          loading: false,\n          releases: data.results,\n          releasesPag: data.pagination,\n        });\n      })\n  }\n  changeCollectionPage(page, pageSize) {\n    this.setState({ loading: true });\n    fetchCollection(page, pageSize)\n      .then(data => {\n        this.setState({\n          loading: false,\n          collection: data.releases,\n          collectionPag: data.pagination,\n        });\n      })\n  }\n\n  addToCollection(id) {\n    postRelease(id)\n    .then(data => {\n      this.state.collection.push(data);\n      const newPagination = this.state.collectionPag.items +1;\n      this.setState({\n        collection: this.state.collection,\n        collectionPag: newPagination\n      });\n    })\n  }\n  render() {\n    const { query, artists, releases, artistsPag, isCollectionLoading, loading, releasesPag, isArtist, isRelease, collection, collectionPag, error } = this.state;\n    const { Header, Footer, Content } = Layout;\n    const { Title, Text } = Typography;\n    return (\n        <Layout className=\"app\">\n          <Header className=\"header\">\n            <Title level={1} className=\"header-title\"><a href='/'>Discogs Catalogue</a></Title>            \n          </Header>\n          <Content>\n            <HashRouter>\n              <Switch>\n              <Route exact path=\"/\" render={() => {\n                return (\n                  <>\n                    <Filter \n                      searchByEnter={this.searchByEnter} \n                      getQuery={this.getQuery} \n                      getSearch={this.getSearch} \n                      fetchQueryData={this.fetchQueryData}\n                      query={query}\n                      searchModes={this.searchModes}\n                      isArtist={isArtist}\n                      isRelease={isRelease}>\n                    </Filter>\n                    {error && <Error></Error>}\n                    <Spin spinning={loading} size=\"large\"></Spin>\n                    {isArtist && \n                      <List isArtist={isArtist} data={artists} ></List>\n                    }\n                    {isArtist && \n                      <Pagination \n                      hideOnSinglePage\n                      size=\"small\" \n                      showSizeChanger={false} \n                      current={artistsPag.page} \n                      total={artistsPag.items} \n                      onChange={this.changeArtistPage} \n                      pageSize={12}/>\n                    }\n                    {isRelease && \n                      <List \n                      isRelease={isRelease} \n                      data={releases} \n                      addToCollection={this.addToCollection}>\n                      </List>\n                    }\n                    {isRelease && \n                      <Pagination \n                      hideOnSinglePage\n                      size=\"small\" \n                      showSizeChanger={false} \n                      defaultCurrent={releasesPag.page} \n                      total={releasesPag.items} \n                      onChange={this.changeReleasePage} \n                      pageSize={12}/>\n                    }\n                    <Collection \n                      data={collection} \n                      pagination={collectionPag}\n                      loading={isCollectionLoading}\n                      changeCollectionPage={this.changeCollectionPage}>\n                    </Collection>\n                  </>\n                )\n              }} />\n              <Route path=\"/:detailType/:detailID\" render={routerProps => {\n                return (\n                  <Detail \n                    routerProps={routerProps}\n                    isArtist={isArtist}\n                    isRelease={isRelease}\n                  />\n                );\n              }} />\n            </Switch>\n            </HashRouter>\n          </Content>\n          <Footer className=\"footer\">\n            <Text><a href='/'>Discogs Catalogue</a></Text>\n            <Text>Made with <HeartOutlined/> by <a href='https://github.com/neired'>Natalia Millán</a></Text>\n          </Footer>\n        </Layout>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}